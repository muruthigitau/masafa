# Generated by Django 4.2.5 on 2025-02-14 18:30

import core.models.template
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('Customer', 'Customer'), ('Staff', 'Staff'), ('Admin', 'Admin')], default='Customer', max_length=200)),
                ('profile_picture', models.URLField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('timezone', models.CharField(blank=True, max_length=255, null=True)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=150, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='App',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='Active', max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('id', models.CharField(editable=False, max_length=255, primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('license', models.CharField(choices=[('MIT', 'MIT'), ('GPL-3.0', 'GPL-3.0'), ('Apache-2.0', 'Apache-2.0'), ('BSD', 'BSD'), ('Custom', 'Custom (Add New)')], default='MIT', max_length=50)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('app_url', models.URLField(blank=True, null=True)),
                ('version', models.CharField(blank=True, default='1.0.0', max_length=50, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('supported_platforms', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Web', 'Web'), ('Android', 'Android'), ('iOS', 'iOS'), ('Windows', 'Windows'), ('Linux', 'Linux'), ('MacOS', 'MacOS'), ('Custom', 'Custom (Add New)')], max_length=42, null=True)),
                ('app_icon', models.ImageField(blank=True, null=True, upload_to='app_icons/')),
                ('github_url', models.URLField(blank=True, null=True)),
                ('modified_by', models.ForeignKey(blank=True, help_text='The user who last modified this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, help_text='The user who created this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChangeLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('model_name', models.CharField(max_length=255)),
                ('object_id', models.CharField(max_length=255)),
                ('changes', models.JSONField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='Active', max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('id', models.CharField(editable=False, max_length=255, primary_key=True, serialize=False)),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='core.app')),
                ('modified_by', models.ForeignKey(blank=True, help_text='The user who last modified this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, help_text='The user who created this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('current', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('database_name', models.CharField(max_length=255, unique=True)),
                ('allowed_apps', models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RoleType',
            fields=[
                ('id', models.CharField(default=core.models.template.generate_by_hash, max_length=255, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('modified_by', models.ForeignKey(blank=True, help_text='The user who last modified this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, help_text='The user who created this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('id', models.CharField(default=core.models.template.generate_by_hash, max_length=255, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('frequency', models.CharField(blank=True, choices=[('Once', 'Once'), ('Daily', 'Daily'), ('Weekly', 'Weekly'), ('Monthly', 'Monthly'), ('Yearly', 'Yearly'), ('Custom', 'Custom')], max_length=255, null=True, verbose_name='Frequency')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Date')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Time')),
                ('timezone', models.CharField(blank=True, default='UTC', help_text='Timezone for the reminder', max_length=50, null=True, verbose_name='Timezone')),
                ('days', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Mon', 'Mon'), ('Tue', 'Tue'), ('Wed', 'Wed'), ('Thur', 'Thur'), ('Fri', 'Fri'), ('Sat', 'Sat'), ('Sun', 'Sun')], max_length=28, null=True, verbose_name='Days')),
                ('day', models.CharField(blank=True, choices=[('01', '01'), ('02', '02'), ('03', '03'), ('04', '04'), ('05', '05'), ('06', '06'), ('07', '07'), ('08', '08'), ('09', '09'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', '31')], max_length=255, null=True, verbose_name='Day')),
                ('enabled', models.BooleanField(default=False, help_text='Check this box if the feature is enabled')),
                ('prereminder_ran', models.BooleanField(default=False, help_text='Has the pre-reminder been sent?')),
                ('pre_reminder_enabled', models.BooleanField(default=False)),
                ('pre_reminder_duration', models.DurationField(blank=True, help_text='Duration before the reminder to send a pre-reminder (e.g., 1 day, 2 hours).', null=True, verbose_name='Pre-reminder Duration')),
                ('message', models.TextField(blank=True, null=True, verbose_name='Message')),
                ('next_run', models.DateTimeField(blank=True, help_text='The next scheduled datetime when the reminder will run.', null=True, verbose_name='Next Run Date and Time')),
                ('custom_interval_days', models.PositiveIntegerField(blank=True, null=True)),
                ('repeat_count', models.PositiveIntegerField(blank=True, null=True)),
                ('repeat_until', models.DateTimeField(blank=True, null=True)),
                ('modified_by', models.ForeignKey(blank=True, help_text='The user who last modified this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, help_text='The user who created this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('users', models.ManyToManyField(blank=True, related_name='reminders', to=settings.AUTH_USER_MODEL, verbose_name='Users')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PrintFormat',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='Active', max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('id', models.CharField(editable=False, max_length=255, primary_key=True, serialize=False)),
                ('type', models.CharField(default='custom', max_length=255)),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='print_formats', to='core.app')),
                ('modified_by', models.ForeignKey(blank=True, help_text='The user who last modified this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='print_formats', to='core.module')),
                ('owner', models.ForeignKey(blank=True, help_text='The user who created this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_view_documents', models.BooleanField(default=False)),
                ('can_edit_documents', models.BooleanField(default=False)),
                ('can_delete_documents', models.BooleanField(default=False)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.role')),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp_code', models.CharField(max_length=6)),
                ('is_active', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='Active', max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('id', models.CharField(editable=False, max_length=255, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('single', 'Single'), ('list', 'List'), ('dynamic', 'Dynamic')], default='list', max_length=255)),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app', to='core.app')),
                ('modified_by', models.ForeignKey(blank=True, help_text='The user who last modified this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='core.module')),
                ('owner', models.ForeignKey(blank=True, help_text='The user who created this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.CharField(default=core.models.template.generate_by_hash, max_length=255, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('modified_by', models.ForeignKey(blank=True, help_text='The user who last modified this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_modified', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(blank=True, help_text='The user who created this record.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_created', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='branch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.branch'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='api_user_groups', to='auth.group'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, related_name='api_user_permissions', to='auth.permission'),
        ),
        migrations.CreateModel(
            name='UserIPAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ip_addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'ip_address')},
            },
        ),
    ]
